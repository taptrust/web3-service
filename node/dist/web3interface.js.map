{"version":3,"sources":["../src/web3interface.js"],"names":["transactionCount","web3","eth","getTransactionCount","signingAccount","address","nextNonce","Web3","require","process","env","NODE_ADDRESS","accounts","privateKeyToAccount","fs","ProxyWallet","JSON","parse","readFileSync","ProxyWalletABI","FactoryAddress","WALLET_FACTORY","WalletFactory","WalletFactoryABI","getWalletContract","contractAddress","Contract","from","gas","gasPrice","FactoryContract"],"mappings":";;;;;;;;;;;;;;;;qFA+BA;AAAA;AAAA;AAAA;AAAA;AAAA,YACIA,mBAAmB,CADvB;AAAA;AAAA;AAAA;;AAAA;AAAA,aAE2BC,KAAKC,GAAL,CAASC,mBAAT,CAA6BC,eAAeC,OAA5C,EAAqD,SAArD,CAF3B;;AAAA;AAEEL,sBAFF;;AAAA;AAAA,uCAIQA,kBAJR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E;;iBAAeM,S;;;;;;;AA/Bf,IAAMC,OAAOC,QAAQ,MAAR,CAAb;;AAEA,IAAMP,OAAO,IAAIM,IAAJ,CAASE,QAAQC,GAAR,CAAYC,YAAZ,IAA4B,+DAArC,CAAb;AACA,IAAMP,iBAAiBH,KAAKC,GAAL,CAASU,QAAT,CAAkBC,mBAAlB,CAAsC,oEAAtC,CAAvB,C,CAAmI;;AAEnI,IAAMC,KAAKN,QAAQ,IAAR,CAAX;AACA,IAAMO,cAAcC,KAAKC,KAAL,CAAWH,GAAGI,YAAH,CAAgB,8BAAhB,EAAgD,MAAhD,CAAX,CAApB;AACA,IAAMC,iBAAiBJ,YAAY,KAAZ,CAAvB;;AAEA,IAAMK,iBAAiBX,QAAQC,GAAR,CAAYW,cAAZ,IAA8B,4CAArD;AACA,IAAMC,gBAAgBN,KAAKC,KAAL,CAAWH,GAAGI,YAAH,CAAgB,gCAAhB,EAAkD,MAAlD,CAAX,CAAtB;AACA,IAAMK,mBAAmBD,cAAc,KAAd,CAAzB;;AAEA,IAAItB,mBAAmB,CAAC,CAAxB;;AAEA,IAAMwB,oBAAoB,SAApBA,iBAAoB,CAASC,eAAT,EAA0B;AACnD,QAAO,IAAIxB,KAAKC,GAAL,CAASwB,QAAb,CAAsBP,cAAtB,EAAsCM,eAAtC,EACP;AACCE,QAAMvB,eAAeC,OADtB;AAECuB,OAAK,SAFN;AAGCC,YAAU;AAHX,EADO,CAAP;AAMA,CAPD;;AASA,IAAMC,kBAAkB,IAAI7B,KAAKC,GAAL,CAASwB,QAAb,CAAsBH,gBAAtB,EAAwCH,cAAxC,EACvB;AACCO,OAAMvB,eAAeC,OADtB;AAECuB,MAAK,SAFN;AAGCC,WAAU;AAHX,CADuB,CAAxB;;QAeI5B,I,GAAAA,I;QAAMG,c,GAAAA,c;QAAgBe,c,GAAAA,c;QAAgBK,iB,GAAAA,iB;QAAmBM,e,GAAAA,e;QAAiBxB,S,GAAAA,S","file":"web3interface.js","sourcesContent":["const Web3 = require('web3');\n\nconst web3 = new Web3(process.env.NODE_ADDRESS || 'https://ropsten.infura.io/v3/155f5547dd0e4ab09bded202e8bcc08a');\nconst signingAccount = web3.eth.accounts.privateKeyToAccount('0x943eed2a06c4ba5991cf724ead779bebca00a7e47d3f29a2a334c7447a763b95');//('0x' + process.env.TAPTRUST_PRIVATEKEY);\n\nconst fs = require('fs');\nconst ProxyWallet = JSON.parse(fs.readFileSync('./contracts/ProxyWallet.json', 'utf8'));\nconst ProxyWalletABI = ProxyWallet['abi'];\n\nconst FactoryAddress = process.env.WALLET_FACTORY || '0x8f0483125fcb9aaaefa9209d8e9d7b9c8b9fb90f'; \nconst WalletFactory = JSON.parse(fs.readFileSync('./contracts/WalletFactory.json', 'utf8'));\nconst WalletFactoryABI = WalletFactory['abi'];\n\nvar transactionCount = -1;\n\nconst getWalletContract = function(contractAddress) {\n\treturn new web3.eth.Contract(ProxyWalletABI, contractAddress,\n\t{\n\t\tfrom: signingAccount.address,\n\t\tgas: '1500000',\n\t\tgasPrice: 20000000000,\n\t});\n}\n\nconst FactoryContract = new web3.eth.Contract(WalletFactoryABI, FactoryAddress,\n\t{\n\t\tfrom: signingAccount.address,\n\t\tgas: '1500000',\n\t\tgasPrice: 20000000000,\n\t});\n\t\nasync function nextNonce() {\n\tif(transactionCount < 0) {\n\t\ttransactionCount = await web3.eth.getTransactionCount(signingAccount.address, \"pending\");\n\t}\n\treturn transactionCount++;\n}\n\nexport {\n    web3, signingAccount, ProxyWalletABI, getWalletContract, FactoryContract, nextNonce\n};"]}