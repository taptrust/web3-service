{"version":3,"sources":["../src/web3interface.js"],"names":["transactionCount","web3","eth","getTransactionCount","signingAccount","address","nextNonce","Web3","require","accounts","privateKeyToAccount","fs","ProxyWallet","JSON","parse","readFileSync","ProxyWalletABI","FactoryAddress","WalletFactory","WalletFactoryABI","getWalletContract","contractAddress","Contract","from","gas","gasPrice","FactoryContract"],"mappings":";;;;;;;;;;;;;;;;qFA+BA;AAAA;AAAA;AAAA;AAAA;AAAA,YACIA,mBAAmB,CADvB;AAAA;AAAA;AAAA;;AAAA;AAAA,aAE2BC,KAAKC,GAAL,CAASC,mBAAT,CAA6BC,eAAeC,OAA5C,EAAqD,SAArD,CAF3B;;AAAA;AAEEL,sBAFF;;AAAA;AAAA,uCAIQA,kBAJR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E;;iBAAeM,S;;;;;;;AA/Bf,IAAMC,OAAOC,QAAQ,MAAR,CAAb;;AAEA,IAAMP,OAAO,IAAIM,IAAJ,CAAS,+DAAT,CAAb;AACA,IAAMH,iBAAiBH,KAAKC,GAAL,CAASO,QAAT,CAAkBC,mBAAlB,CAAsC,oEAAtC,CAAvB,C,CAAmI;;AAEnI,IAAMC,KAAKH,QAAQ,IAAR,CAAX;AACA,IAAMI,cAAcC,KAAKC,KAAL,CAAWH,GAAGI,YAAH,CAAgB,8BAAhB,EAAgD,MAAhD,CAAX,CAApB;AACA,IAAMC,iBAAiBJ,YAAY,KAAZ,CAAvB;;AAEA,IAAMK,iBAAiB,4CAAvB;AACA,IAAMC,gBAAgBL,KAAKC,KAAL,CAAWH,GAAGI,YAAH,CAAgB,gCAAhB,EAAkD,MAAlD,CAAX,CAAtB;AACA,IAAMI,mBAAmBD,cAAc,KAAd,CAAzB;;AAEA,IAAIlB,mBAAmB,CAAC,CAAxB;;AAEA,IAAMoB,oBAAoB,SAApBA,iBAAoB,CAASC,eAAT,EAA0B;AACnD,QAAO,IAAIpB,KAAKC,GAAL,CAASoB,QAAb,CAAsBN,cAAtB,EAAsCK,eAAtC,EACP;AACCE,QAAMnB,eAAeC,OADtB;AAECmB,OAAK,SAFN;AAGCC,YAAU;AAHX,EADO,CAAP;AAMA,CAPD;;AASA,IAAMC,kBAAkB,IAAIzB,KAAKC,GAAL,CAASoB,QAAb,CAAsBH,gBAAtB,EAAwCF,cAAxC,EACvB;AACCM,OAAMnB,eAAeC,OADtB;AAECmB,MAAK,SAFN;AAGCC,WAAU;AAHX,CADuB,CAAxB;;QAeIxB,I,GAAAA,I;QAAMG,c,GAAAA,c;QAAgBY,c,GAAAA,c;QAAgBI,iB,GAAAA,iB;QAAmBH,c,GAAAA,c;QAAgBS,e,GAAAA,e;QAAiBpB,S,GAAAA,S","file":"web3interface.js","sourcesContent":["const Web3 = require('web3');\r\n\r\nconst web3 = new Web3('https://ropsten.infura.io/v3/155f5547dd0e4ab09bded202e8bcc08a');\r\nconst signingAccount = web3.eth.accounts.privateKeyToAccount('0x943eed2a06c4ba5991cf724ead779bebca00a7e47d3f29a2a334c7447a763b95');//('0x' + process.env.TAPTRUST_PRIVATEKEY);\r\n\r\nconst fs = require('fs');\r\nconst ProxyWallet = JSON.parse(fs.readFileSync('./contracts/ProxyWallet.json', 'utf8'));\r\nconst ProxyWalletABI = ProxyWallet['abi'];\r\n\r\nconst FactoryAddress = '0x64edfe6555ffc7f4d69e217f24543894c9ee3f56'; \r\nconst WalletFactory = JSON.parse(fs.readFileSync('./contracts/WalletFactory.json', 'utf8'));\r\nconst WalletFactoryABI = WalletFactory['abi'];\r\n\r\nvar transactionCount = -1;\r\n\r\nconst getWalletContract = function(contractAddress) {\r\n\treturn new web3.eth.Contract(ProxyWalletABI, contractAddress,\r\n\t{\r\n\t\tfrom: signingAccount.address,\r\n\t\tgas: '1500000',\r\n\t\tgasPrice: 20000000000,\r\n\t});\r\n}\r\n\r\nconst FactoryContract = new web3.eth.Contract(WalletFactoryABI, FactoryAddress,\r\n\t{\r\n\t\tfrom: signingAccount.address,\r\n\t\tgas: '1500000',\r\n\t\tgasPrice: 20000000000,\r\n\t});\r\n\t\r\nasync function nextNonce() {\r\n\tif(transactionCount < 0) {\r\n\t\ttransactionCount = await web3.eth.getTransactionCount(signingAccount.address, \"pending\");\r\n\t}\r\n\treturn transactionCount++;\r\n}\r\n\r\nexport {\r\n    web3, signingAccount, ProxyWalletABI, getWalletContract, FactoryAddress, FactoryContract, nextNonce\r\n};"]}