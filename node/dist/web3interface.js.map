{"version":3,"sources":["../src/web3interface.js"],"names":["transactionCount","web3","eth","getTransactionCount","signingAccount","address","nextNonce","Web3","require","process","env","NODE_ADDRESS","accounts","privateKeyToAccount","TAPTRUST_PRIVATEKEY","fs","ProxyWallet","JSON","parse","readFileSync","ProxyWalletABI","FactoryAddress","WALLET_FACTORY","WalletFactory","WalletFactoryABI","getWalletContract","contractAddress","Contract","from","gas","gasPrice","FactoryContract"],"mappings":";;;;;;;;;;;;;;;;qFA+BA;AAAA;AAAA;AAAA;AAAA;AAAA,YACIA,mBAAmB,CADvB;AAAA;AAAA;AAAA;;AAAA;AAAA,aAE2BC,KAAKC,GAAL,CAASC,mBAAT,CAA6BC,eAAeC,OAA5C,EAAqD,SAArD,CAF3B;;AAAA;AAEEL,sBAFF;;AAAA;AAAA,uCAIQA,kBAJR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,E;;iBAAeM,S;;;;;;;AA/Bf,IAAMC,OAAOC,QAAQ,MAAR,CAAb;;AAEA,IAAMP,OAAO,IAAIM,IAAJ,CAASE,QAAQC,GAAR,CAAYC,YAArB,CAAb;AACA,IAAMP,iBAAiBH,KAAKC,GAAL,CAASU,QAAT,CAAkBC,mBAAlB,CAAsC,OAAOJ,QAAQC,GAAR,CAAYI,mBAAzD,CAAvB;;AAEA,IAAMC,KAAKP,QAAQ,IAAR,CAAX;AACA,IAAMQ,cAAcC,KAAKC,KAAL,CAAWH,GAAGI,YAAH,CAAgB,8BAAhB,EAAgD,MAAhD,CAAX,CAApB;AACA,IAAMC,iBAAiBJ,YAAY,KAAZ,CAAvB;;AAEA,IAAMK,iBAAiBZ,QAAQC,GAAR,CAAYY,cAAZ,IAA8B,4CAArD;AACA,IAAMC,gBAAgBN,KAAKC,KAAL,CAAWH,GAAGI,YAAH,CAAgB,gCAAhB,EAAkD,MAAlD,CAAX,CAAtB;AACA,IAAMK,mBAAmBD,cAAc,KAAd,CAAzB;;AAEA,IAAIvB,mBAAmB,CAAC,CAAxB;;AAEA,IAAMyB,oBAAoB,SAApBA,iBAAoB,CAASC,eAAT,EAA0B;AACnD,QAAO,IAAIzB,KAAKC,GAAL,CAASyB,QAAb,CAAsBP,cAAtB,EAAsCM,eAAtC,EACP;AACCE,QAAMxB,eAAeC,OADtB;AAECwB,OAAK,SAFN;AAGCC,YAAU;AAHX,EADO,CAAP;AAMA,CAPD;;AASA,IAAMC,kBAAkB,IAAI9B,KAAKC,GAAL,CAASyB,QAAb,CAAsBH,gBAAtB,EAAwCH,cAAxC,EACvB;AACCO,OAAMxB,eAAeC,OADtB;AAECwB,MAAK,SAFN;AAGCC,WAAU;AAHX,CADuB,CAAxB;;QAeI7B,I,GAAAA,I;QAAMG,c,GAAAA,c;QAAgBgB,c,GAAAA,c;QAAgBK,iB,GAAAA,iB;QAAmBM,e,GAAAA,e;QAAiBzB,S,GAAAA,S","file":"web3interface.js","sourcesContent":["const Web3 = require('web3');\r\n\r\nconst web3 = new Web3(process.env.NODE_ADDRESS);\r\nconst signingAccount = web3.eth.accounts.privateKeyToAccount('0x' + process.env.TAPTRUST_PRIVATEKEY);\r\n\r\nconst fs = require('fs');\r\nconst ProxyWallet = JSON.parse(fs.readFileSync('./contracts/ProxyWallet.json', 'utf8'));\r\nconst ProxyWalletABI = ProxyWallet['abi'];\r\n\r\nconst FactoryAddress = process.env.WALLET_FACTORY || '0x8f0483125fcb9aaaefa9209d8e9d7b9c8b9fb90f'; \r\nconst WalletFactory = JSON.parse(fs.readFileSync('./contracts/WalletFactory.json', 'utf8'));\r\nconst WalletFactoryABI = WalletFactory['abi'];\r\n\r\nvar transactionCount = -1;\r\n\r\nconst getWalletContract = function(contractAddress) {\r\n\treturn new web3.eth.Contract(ProxyWalletABI, contractAddress,\r\n\t{\r\n\t\tfrom: signingAccount.address,\r\n\t\tgas: '1500000',\r\n\t\tgasPrice: 20000000000,\r\n\t});\r\n}\r\n\r\nconst FactoryContract = new web3.eth.Contract(WalletFactoryABI, FactoryAddress,\r\n\t{\r\n\t\tfrom: signingAccount.address,\r\n\t\tgas: '1500000',\r\n\t\tgasPrice: 20000000000,\r\n\t});\r\n\t\r\nasync function nextNonce() {\r\n\tif(transactionCount < 0) {\r\n\t\ttransactionCount = await web3.eth.getTransactionCount(signingAccount.address, \"pending\");\r\n\t}\r\n\treturn transactionCount++;\r\n}\r\n\r\nexport {\r\n    web3, signingAccount, ProxyWalletABI, getWalletContract, FactoryContract, nextNonce\r\n};"]}